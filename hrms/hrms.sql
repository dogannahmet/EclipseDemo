DROP SCHEMA public CASCADE;
CREATE SCHEMA public;

CREATE TABLE public.users(
	id INTEGER GENERATED BY DEFAULT AS IDENTITY( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1),
	email CHARACTER VARYING(320) NOT NULL,
	password CHARACTER VARYING(25) NOT NULL,
	CONSTRAINT pk_users PRIMARY KEY(id),
	CONSTRAINT uc_users_email UNIQUE(email) 
);

CREATE TABLE public.employees(
	id INTEGER NOT NULL,
	first_name CHARACTER VARYING(30) NOT NULL,
	last_name CHARACTER VARYING(30) NOT NULL,
	CONSTRAINT pk_employees PRIMARY KEY(id),
	CONSTRAINT fk_employees_users FOREIGN KEY(id) REFERENCES public.users(id) ON DELETE CASCADE
);

CREATE TABLE public.candidates(
	id INTEGER NOT NULL,
	first_name CHARACTER VARYING(30) NOT NULL,
	last_name CHARACTER VARYING(30) NOT NULL,
	identity_number CHARACTER VARYING(11) NOT NULL,
	birth_date DATE NOT NULL,
	CONSTRAINT pk_candidates PRIMARY KEY(id),
	CONSTRAINT fk_candidates_users FOREIGN KEY(id) REFERENCES public.users(id) ON DELETE CASCADE,
	CONSTRAINT uc_candidates_identity_number UNIQUE(identity_number)
);

CREATE TABLE public.employers(
	id INTEGER,
	company_name CHARACTER VARYING(255) NOT NULL,
	web_address CHARACTER VARYING(50) NOT NULL,
	CONSTRAINT pk_employers PRIMARY KEY(id),
	CONSTRAINT fk_employers_users FOREIGN KEY(id) REFERENCES public.users(id) ON DELETE CASCADE
);

CREATE TABLE public.employer_phones(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	employer_id INTEGER NOT NULL,
	phone_number CHARACTER VARYING(12) NOT NULL,
	CONSTRAINT pk_employer_phones PRIMARY KEY (id),
	CONSTRAINT fk_employer_phones_employer_id FOREIGN KEY (employer_id) REFERENCES public.employers (id) ON DELETE CASCADE
);

CREATE TABLE public.verification_codes(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	code CHARACTER VARYING(40) NOT NULL,
	is_verified BOOLEAN NOT NULL,
	verified_date DATE,
	CONSTRAINT pk_verification_codes PRIMARY KEY(id),
	CONSTRAINT uc_verification_codes_code UNIQUE(code)
);

CREATE TABLE public.verification_codes_employers(
	id INTEGER NOT NULL,
	employer_id INTEGER NOT NULL,
	CONSTRAINT pk_verification_codes_employers PRIMARY KEY (id),
	CONSTRAINT fk_verification_codes_employers_verification_codes FOREIGN KEY (id) REFERENCES public.verification_codes (id) ON DELETE CASCADE,
	CONSTRAINT fk_verification_codes_employers_employers FOREIGN KEY (employer_id) REFERENCES public.employers (id) ON DELETE CASCADE
);

CREATE TABLE public.verification_codes_candidates(
	id INTEGER NOT NULL,
	candidate_id INTEGER NOT NULL,
	CONSTRAINT pk_verification_codes_candidates PRIMARY KEY (id),
	CONSTRAINT fk_verification_codes_candidates_verification_codes FOREIGN KEY (id) REFERENCES public.verification_codes (id) ON DELETE CASCADE,
	CONSTRAINT fk_verification_codes_candidates_candidates FOREIGN KEY (candidate_id) REFERENCES public.candidates (id) ON DELETE CASCADE
);


CREATE TABLE public.employee_confirms(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	employee_id INTEGER NOT NULL,
	is_confirmed BOOLEAN DEFAULT false NOT NULL,
	CONSTRAINT pk_employee_confirms PRIMARY KEY (id),
	CONSTRAINT fk_employee_confirms_employees FOREIGN KEY (employee_id) REFERENCES public.employees (id) ON DELETE CASCADE
);

CREATE TABLE public.employee_confirms_employers(
	employee_confirm_id INTEGER NOT NULL,
	employer_id INTEGER NOT NULL,
	CONSTRAINT pk_employee_confirms_employers PRIMARY KEY (employee_confirm_id),
	CONSTRAINT fk_employee_confirms_employers_employee_confirms FOREIGN KEY (employee_confirm_id) REFERENCES public.employee_confirms (id) ON DELETE CASCADE,
	CONSTRAINT fk_employee_confirms_employers_employers FOREIGN KEY (employer_id) REFERENCES public.employers (id) ON DELETE CASCADE
);

CREATE TABLE public.job_titles(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	title CHARACTER VARYING(255) NOT NULL,
	CONSTRAINT pk_job_titles PRIMARY KEY (id),
	CONSTRAINT uc_job_titles_title UNIQUE (title)
);

INSERT INTO public.job_titles (title) 
VALUES ('Software Developer'),('Software Architect');

DO $$
    DECLARE candidate_id integer;
BEGIN
	INSERT INTO public.users (email, password) VALUES('doganahmet@outlook.com.tr','12345') RETURNING id INTO candidate_id;
	INSERT INTO public.candidates (id,first_name,last_name,identity_number,birth_date) VALUES(candidate_id,'Ahmet','DoÄŸan','12345678910','1987-01-09');
END $$;